name: Build and Publish

on:
  push:
    branches: [ main ]

env:
  REGISTRY: quay.io
  IMAGE_NAME: redhat-ai-dev/rosa-namespace-provisioner

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      
    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.1.0
      with:
        go-version: '1.24'
        
    - name: Cache Go modules
      uses: actions/cache@6849a6489cac3c661b3c7e0322f4ad8890e3e52e # v4.1.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests
      run: make test
      
    - name: Run Go vet
      run: go vet ./...
      
    - name: Build application
      run: make build
      
    - name: Set up container metadata
      id: meta
      run: |
        echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT
        echo "commit_sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
        echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      
    - name: Login to Quay.io
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        
    - name: Build and push container images
      uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.10.0
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: |
          ${{ steps.meta.outputs.image }}:latest
          ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.commit_sha }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
        
    - name: Output image details
      run: |
        echo "ðŸš€ Successfully published container images:"
        echo "ðŸ“¦ ${{ steps.meta.outputs.image }}:latest"
        echo "ðŸ“¦ ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.commit_sha }}"
        echo "ðŸ”— Image registry: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" 